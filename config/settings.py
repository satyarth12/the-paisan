"""
Django settings for bingeman project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import django_heroku

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^qvk+ug6#k9u!9@q6_2!g7je!!e*u^taxuidi-r4+45b&4^(mm'

# SECRET_KEY = os.environ.get('SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = os.environ.get('DEBUG_VALUE') == 'True'

ALLOWED_HOSTS = ['*']  # bingemanapi.herokuapp.com
# CORS_ORIGIN_WHITELIST = [
#     'http://localhost:4200'
# ]

CORS_ORIGIN_ALLOW_ALL = True

os.environ['DJANGO_SETTINGS_MODULE'] = 'config.settings'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'drf_yasg',
    'oauth2_provider',
    'rest_framework',
    'channels',
    'django_celery_results',
    'django_celery_beat',

    # apps
    'user',
    'connections',
    'movie_tv',
    'notifications',
    'profiling',
    'rating_review',
    'recommendation',
    # 'utils',

    'corsheaders',
    'django_filters',
    'rest_framework.authtoken',
    'social_django',
    'rest_framework_social_oauth2',
    # 'fcm_django'
]


# Provider specific settings
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        # For each OAuth based provider, either add a ``SocialApp``
        # (``socialaccount`` app) containing the required client
        # credentials, or list them here:
        'APP': {
            'client_id': '827413305674-tov8n5qkas0mhcbm39klek796m8411qf.apps.googleusercontent.com',
            'secret': 'icnTg8vBM4Vr1pokmjKVB6om',
            'key': ''
        }
    }
}

SITE_ID = 1

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework_social_oauth2.authentication.SocialAuthentication',
    ],

    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
        # 'rest_framework.permissions.AllowAny',
    )
}

AUTHENTICATION_BACKENDS = (


    # Google OAuth2
    'social_core.backends.google.GoogleOAuth2',

    # django-rest-framework-social-oauth2
    'rest_framework_social_oauth2.backends.DjangoOAuth2',

    # Django
    'django.contrib.auth.backends.ModelBackend',
    'social_core.backends.facebook.FacebookAppOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',

)

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'
ASGI_APPLICATION = 'config.asgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3')
    }
}


# DATABASES = {

#     'default': {

#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'bingeman',
#         'USER': 'postgres',
#         'PASSWORD': '6march@20',
#         'HOST': 'localhost',
#         'PORT': '5432',

#     }

# }


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

AUTH_USER_MODEL = "user.User"

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = 'ya29.a0AfH6SMBNFpThULYc7QQDNtvRQ1YsRIOky3KRmHwmfVqzoELUdcKyxmzVlCZdV3sF_Ca1cMmOrOHIA7fDqYnXNnAApC6KBNoEz9-2qHob3XVnEU_MaRwS7HpQfpKtDOfiWEH2JnVnB-Eg9Fvs8RQsCxOy-RsY4tsjuiw'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'icnTg8vBM4Vr1pokmjKVB6om'

SOCIAL_AUTH_FACEBOOK_KEY = '260786821820989'
SOCIAL_AUTH_FACEBOOK_SECRET = '1326abd9c479f18838685f936ae0abb9'

SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
]

SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id, name, email'
}

OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {'read': 'Read scope', 'write': 'Write scope', 'groups': 'Access to your groups'}, 'OAUTH2_BACKEND_CLASS': 'oauth2_provider.oauth2_backends.JSONOAuthLibCore',
    'ACCESS_TOKEN_EXPIRE_SECONDS': 36000,
}

FCM_DJANGO_SETTINGS = {
    "FCM_SERVER_KEY": "AAAALKJEFjE:APA91bGPUvkLWzkSqB7hWVYKuOQ6A4yE2sRCS2r3CzDwqjL22EDDkMOxMKQPErwkF9b2QrN7gGdhV5d3NdNbHlpzwKga-iuyCf5GtHZsZd-pP7KrmpUy-wBLf6kqCsqmcCwEXOoEeylx ",
    "ONE_DEVICE_PER_USER": False,
    "DELETE_INACTIVE_DEVICES": True,
}

django_heroku.settings(locals())


# Channel layer settings
# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': 'channels_redis.core.RedisChannelLayer',
#         'CONFIG': {
#             "hosts": [('127.0.0.1', 6379)],
#         },
#     },
# }

# # celery settings
# CELERY_BROKER_URL = 'redis://127.0.0.1:6379'
# CELERY_ACCEPT_CONTENT = ['application/json']
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_TIMEZONE = 'Asia/Kolkata'
# CELERY_RESULT_BACKEND = 'django-db'

# CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

# # REDIS CACHE SETTINGS
# CACHE_TTL = 60 * 150  # this shows the time period of the cached data
# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379/1",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient"
#         },
#         "KEY_PREFIX": "bingeman"
#     }
# }

# # session engine config
# SESSION_ENGINE = "django.contrib.sessions.backends.cache"
# SESSION_CACHE_ALIAS = "default"


INTERNAL_FEATURE_FLAGS = {
    'sms_gateway': False,
    'api_throttle': False
}
